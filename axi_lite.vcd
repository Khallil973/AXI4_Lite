$date
	Sat Mar 29 17:12:28 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module axi_lite_tb $end
$scope module uut $end
$var wire 1 ! arst_n $end
$var wire 1 " clk $end
$var wire 32 # read_address [31:0] $end
$var wire 1 $ start_read $end
$var wire 1 % start_write $end
$var wire 32 & write_address_M [31:0] $end
$var wire 32 ' write_data [31:0] $end
$var wire 1 ( write_done $end
$var wire 1 ) read_done $end
$var wire 32 * read_data [31:0] $end
$var wire 1 + axi_wvalid $end
$var wire 4 , axi_wstrb [3:0] $end
$var wire 1 - axi_wready $end
$var wire 32 . axi_wdata [31:0] $end
$var wire 1 / axi_rvalid $end
$var wire 2 0 axi_rresp [1:0] $end
$var wire 1 1 axi_rready $end
$var wire 32 2 axi_rdata [31:0] $end
$var wire 1 3 axi_bvalid $end
$var wire 2 4 axi_bresp [1:0] $end
$var wire 1 5 axi_bready $end
$var wire 1 6 axi_awvalid $end
$var wire 1 7 axi_awready $end
$var wire 32 8 axi_awaddr [31:0] $end
$var wire 1 9 axi_arvalid $end
$var wire 1 : axi_arready $end
$var wire 32 ; axi_araddr [31:0] $end
$scope module master $end
$var wire 1 ! arst_n $end
$var wire 1 " clk $end
$var wire 32 < read_address [31:0] $end
$var wire 1 $ start_read $end
$var wire 1 % start_write $end
$var wire 32 = write_address_M [31:0] $end
$var wire 32 > write_data [31:0] $end
$var wire 1 - M_AXI_WREADY $end
$var wire 1 / M_AXI_RVALID $end
$var wire 2 ? M_AXI_RRESP [1:0] $end
$var wire 32 @ M_AXI_RDATA [31:0] $end
$var wire 1 3 M_AXI_BVALID $end
$var wire 2 A M_AXI_BRESP [1:0] $end
$var wire 1 7 M_AXI_AWREADY $end
$var wire 1 : M_AXI_ARREADY $end
$var reg 32 B M_AXI_ARADDR [31:0] $end
$var reg 1 9 M_AXI_ARVALID $end
$var reg 32 C M_AXI_AWADDR [31:0] $end
$var reg 1 6 M_AXI_AWVALID $end
$var reg 1 5 M_AXI_BREADY $end
$var reg 1 1 M_AXI_RREADY $end
$var reg 32 D M_AXI_WDATA [31:0] $end
$var reg 4 E M_AXI_WSTRB [3:0] $end
$var reg 1 + M_AXI_WVALID $end
$var reg 32 F read_data [31:0] $end
$var reg 1 ) read_done $end
$var reg 1 ( write_done $end
$upscope $end
$scope module slave $end
$var wire 32 G S_AXI_ARADDR [31:0] $end
$var wire 1 9 S_AXI_ARVALID $end
$var wire 32 H S_AXI_AWADDR [31:0] $end
$var wire 1 6 S_AXI_AWVALID $end
$var wire 1 5 S_AXI_BREADY $end
$var wire 1 1 S_AXI_RREADY $end
$var wire 32 I S_AXI_WDATA [31:0] $end
$var wire 4 J S_AXI_WSTRB [3:0] $end
$var wire 1 + S_AXI_WVALID $end
$var wire 1 ! arst_n $end
$var wire 1 " clk $end
$var reg 1 : S_AXI_ARREADY $end
$var reg 1 7 S_AXI_AWREADY $end
$var reg 2 K S_AXI_BRESP [1:0] $end
$var reg 1 3 S_AXI_BVALID $end
$var reg 32 L S_AXI_RDATA [31:0] $end
$var reg 2 M S_AXI_RRESP [1:0] $end
$var reg 1 / S_AXI_RVALID $end
$var reg 1 - S_AXI_WREADY $end
$var reg 32 N debug_mem_value [31:0] $end
$var reg 32 O read_address_S [31:0] $end
$var reg 32 P write_address_S [31:0] $end
$var reg 1 Q write_in_progress_S $end
$var integer 32 R i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b100000000 R
0Q
bx P
bx O
b0 N
b0 M
bx L
b0 K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
b0 A
bx @
b0 ?
b0 >
b0 =
b0 <
bx ;
0:
09
bx 8
07
06
05
b0 4
03
bx 2
01
b0 0
0/
bx .
0-
bx ,
0+
bx *
0)
0(
b0 '
b0 &
0%
0$
b0 #
0"
0!
$end
#5000
b100000000 R
1"
#10000
0"
1!
#15000
1"
#20000
0"
b10100101101001011010010110100101 '
b10100101101001011010010110100101 >
b10000 &
b10000 =
#25000
1%
1"
#30000
0"
#35000
b1111 ,
b1111 E
b1111 J
1+
b10100101101001011010010110100101 .
b10100101101001011010010110100101 D
b10100101101001011010010110100101 I
16
b10000 8
b10000 C
b10000 H
0%
1"
#40000
0"
#45000
17
b10000 P
1"
#50000
0"
#55000
06
1Q
07
1"
#60000
0"
#65000
1-
1"
#70000
0"
#75000
0+
b10100101101001011010010110100101 N
13
0Q
0-
1"
#80000
0"
#85000
1(
15
1"
#90000
0"
#95000
03
1"
#100000
0"
b10000 #
b10000 <
#105000
1$
05
1"
#110000
0"
#115000
19
b10000 ;
b10000 B
b10000 G
0$
1"
#120000
0"
#125000
1:
b10000 O
1"
#130000
0"
#135000
09
1/
b10100101101001011010010110100101 2
b10100101101001011010010110100101 @
b10100101101001011010010110100101 L
0:
1"
#140000
0"
#145000
1)
b10100101101001011010010110100101 *
b10100101101001011010010110100101 F
11
1"
#150000
0"
#155000
0/
1"
#160000
0"
#165000
01
1"
#170000
0"
b10010001101000101011001111000 '
b10010001101000101011001111000 >
b100000 &
b100000 =
#175000
1%
1"
#180000
0"
#185000
0%
0(
1+
b10010001101000101011001111000 .
b10010001101000101011001111000 D
b10010001101000101011001111000 I
16
b100000 8
b100000 C
b100000 H
1"
#190000
0"
b100000 #
b100000 <
#195000
17
b100000 P
1$
1"
#200000
0"
#205000
0$
1Q
07
0)
19
b100000 ;
b100000 B
b100000 G
06
1"
#210000
0"
#215000
1:
b100000 O
1-
1"
#220000
0"
b11001010111111101011101010111110 '
b11001010111111101011101010111110 >
b10011 &
b10011 =
#225000
1%
1/
b10010001101000101011001111000 2
b10010001101000101011001111000 @
b10010001101000101011001111000 L
0:
b10010001101000101011001111000 N
13
0Q
0-
09
0+
1"
#230000
0"
#235000
1)
b10010001101000101011001111000 *
b10010001101000101011001111000 F
11
1(
15
1+
b11001010111111101011101010111110 .
b11001010111111101011101010111110 D
b11001010111111101011101010111110 I
16
b10011 8
b10011 C
b10011 H
0%
1"
#240000
0"
#245000
0/
03
17
b10011 P
1"
#250000
0"
#255000
01
05
06
1Q
07
1"
#260000
0"
b1111111111111111 #
b1111111111111111 <
#265000
1$
1-
1"
#270000
0"
#275000
0)
19
b1111111111111111 ;
b1111111111111111 B
b1111111111111111 G
0+
b11001010111111101011101010111110 N
13
0Q
0-
0$
1"
#280000
0"
#285000
1:
b1111111111111111 O
15
1"
#290000
0"
b10001001000100011001101000100 '
b10001001000100011001101000100 >
b110000 &
b110000 =
#295000
09
1/
bx 2
bx @
bx L
0:
03
1%
1"
#300000
0"
b1010101011001100111011110001000 '
b1010101011001100111011110001000 >
b1000000 &
b1000000 =
#305000
1)
bx *
bx F
11
05
0(
1+
b1010101011001100111011110001000 .
b1010101011001100111011110001000 D
b1010101011001100111011110001000 I
16
b1000000 8
b1000000 C
b1000000 H
1"
#310000
0"
#315000
0/
17
b1000000 P
0%
1"
#320000
0"
#325000
1Q
07
01
06
1"
#330000
0"
#335000
1-
1"
#340000
0"
#345000
b1010101011001100111011110001000 N
13
0Q
0-
0+
1"
#350000
0"
#355000
1(
15
1"
#360000
0"
#365000
03
1"
#370000
0"
b110000 #
b110000 <
#375000
05
1$
1"
#380000
0"
b1000000 #
b1000000 <
#385000
0)
19
b1000000 ;
b1000000 B
b1000000 G
1"
#390000
0"
#395000
1:
b1000000 O
0$
1"
#400000
0"
#405000
1/
b1010101011001100111011110001000 2
b1010101011001100111011110001000 @
b1010101011001100111011110001000 L
0:
09
1"
#410000
0"
#415000
1)
b1010101011001100111011110001000 *
b1010101011001100111011110001000 F
11
1"
#420000
0"
#425000
0/
1"
#430000
0"
#435000
01
1"
#440000
0"
#445000
1"
#450000
0"
#455000
1"
#460000
0"
#465000
1"
#470000
0"
